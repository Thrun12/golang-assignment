version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: job-applicants-db
    environment:
      POSTGRES_USER: applicants_user
      POSTGRES_PASSWORD: applicants_pass
      POSTGRES_DB: applicants
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U applicants_user -d applicants"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    build: .
    command: ./migrate -direction up
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://applicants_user:applicants_pass@postgres:5432/applicants?sslmode=disable
      MIGRATION_PATH: internal/db/migrations
    networks:
      - app-network
    profiles:
      - setup

  seed:
    build: .
    command: ./seed --clear
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://applicants_user:applicants_pass@postgres:5432/applicants?sslmode=disable
      LOG_LEVEL: info
      ENVIRONMENT: development
    networks:
      - app-network
    profiles:
      - seed

  api:
    build: .
    container_name: job-applicants-api
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      DATABASE_URL: postgres://applicants_user:applicants_pass@postgres:5432/applicants?sslmode=disable
      SERVER_PORT: 8080
      GRPC_PORT: 9090
      LOG_LEVEL: debug
      LOG_FORMAT: console
      CORS_ORIGINS: "*"
      ENABLE_SWAGGER: "true"
      ENVIRONMENT: development
      MIGRATION_PATH: internal/db/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
